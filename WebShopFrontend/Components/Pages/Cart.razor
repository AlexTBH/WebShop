@page "/cart"
@using WebShopFrontend.Models
@using WebShopFrontend.Interfaces
@using WebShopFrontend.Services
@using WebShopShared.Models
@rendermode InteractiveServer
@inject OrderStateService _orderStateService
@inject IOrderService _orderService;

@if (_products.Any())
{
    <GenericList Items="_products">
        <ItemTemplate Context="orderProduct">
            <div>@orderProduct.Product.Name</div>
            <div>@orderProduct.Product.Price kr</div>
            <div>@orderProduct.Quantity</div>
        </ItemTemplate>
    </GenericList>

    <div>
        <strong>Total Cost: @_totalCost kr </strong>
    </div>

    <EditForm Model="_purchaseModel" OnValidSubmit="HandleValidSubmit" FormName="checkoutForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Name:</label>
            <InputText @bind-Value="_purchaseModel.Name" />
        </div>
        <div>
            <label>Address:</label>
            <InputText @bind-Value="_purchaseModel.Address" />
        </div>

        <button type="submit">Submit Order</button>
    </EditForm>
}
else
{
    <div>Inga produkter tillagda</div>
}



@code {
    private List<OrderProductDetailsDto> _products = new();
    private PurchaseModel _purchaseModel = new();
    private double _totalCost;
    [Inject]
    private NavigationManager? _navManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Fetch products and calculate total cost
        _products = await _orderService.GetOrderProducts();
        CalculateTotalCost();
    }

    private void CalculateTotalCost()
    {
        if (_products != null && _products.Any())
        {
            _totalCost = _products.Sum(item => item.Product.Price * item.Quantity);
        }
        else
        {
            _totalCost = 0;
        }
    }

    private void HandleValidSubmit()
    {
        _orderStateService.Products = _products;
        _orderStateService.PurchaseModel = _purchaseModel;
        _orderStateService.TotalCost = _totalCost;

        _navManager?.NavigateTo("/ConfirmedPurchase");
    }
}
