@page "/products"
@rendermode InteractiveServer
@using WebShopFrontend.Interfaces
@using WebShopShared.Models
@using WebShopFrontend.Components

<div class="product-container">
    <section class="products-list">
        <GenericList Items="_products">
            <ItemTemplate>
                <article class="product-item">
                    <img src="@context.Url" @onclick="() => OnProductClick(context.Id)" alt="@context.Name" />
                    <h2>@context.Name</h2>
                    <p class="price">@context.Price.ToString("N2") kr</p>
                    <p class="product-stock @((context.IsInStock ? "in-stock" : "out-of-stock"))">
                        @((context.IsInStock ? "In stock" : "Out of stock"))
                    </p>
                    @if (context.OnSale)
                    {
                        <p class="sale-label">SALE</p>  
                    }
                    <AddToCart Product="context"></AddToCart>
                </article>
            </ItemTemplate>
        </GenericList>
    </section>
</div>

@code {
    private List<ProductDto> _products = new List<ProductDto>();

    [Inject]
    private IProductService? _productService { get; set; }

    [Inject]
    private NavigationManager? _navManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (_productService == null)
        {
            throw new InvalidOperationException("ProductService is not available.");
        }

        _products = await _productService.GetProducts();
    }

    private void OnProductClick(int productId)
    {
        _navManager?.NavigateTo($"/products/{productId}");
    }
}
