@page "/products/{Id:int}"
@using WebShopFrontend.Interfaces
@using WebShopShared.Models
@using WebShopFrontend.Components.ProductComponents
@using WebShopFrontend.Components
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer

<div class="product-container">
	<LoadSingleProduct Item="_product">
		<ItemTemplate>
            <div class="product-container">
                <article class="product-item">
                    <header class="product-header">
                        <img src="@_product.Url" alt="@_product.Name" class="product-image" />
                        <h2 class="product-name">@_product.Name</h2>
                    </header>

                    <section class="product-description">
                        <p>@_product.Description</p>
                        <p class="product-stock @(_product.IsInStock ? "in-stock" : "out-of-stock")">
                            @(_product.IsInStock ? "In stock" : "Out of stock")
                        </p>
                    </section>

                    <section class="product-price">
                        <CurrencyExchange Amount="@_product.Price"></CurrencyExchange>
                    </section>

                    <section class="add-to-cart-section">
                        <AddToCart Product="_product"></AddToCart>
                    </section>
                </article>
            </div>
		</ItemTemplate>
	</LoadSingleProduct>
</div>

@code {
	private ProductDto _product { get; set; } = null!;

	[Parameter]
	public int Id { get; set; }
	[Inject]
	private IProductService _productService { get; set; } = null!;

	protected override async Task OnInitializedAsync()
	{
		if (_productService == null)
		{
			throw new InvalidOperationException("ProductService is not available");
		}

		_product = await _productService.GetProduct(Id);
	}
}
