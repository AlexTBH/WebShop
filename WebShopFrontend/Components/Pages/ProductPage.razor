@page "/products/{Id:int}"
@using WebShopFrontend.Interfaces
@using WebShopShared.Models
@using WebShopFrontend.Components.ProductComponents
@using WebShopFrontend.Components
@using Microsoft.AspNetCore.Components.Authorization


<div class="product-container">
	<LoadSingleProduct Item="_product">
		<ItemTemplate>
			<div class="product-item">
				<img src="@context.Url" />
				<p class="product-name">@context.Name</p>
				<p>@context.Description</p>
				<p class="product-stock">@((context.IsInStock ? "In stock" : "Out of stock"))</p>
				<CurrencyExchange Amount="@context.Price"></CurrencyExchange>
				<AddToCart ProductId="context.Id"></AddToCart>
			</div>
		</ItemTemplate>
	</LoadSingleProduct>
</div>

@code {
	private ProductDto _product { get; set; } = null!;

	[Parameter]
	public int Id { get; set; }
	[Inject]
	private IProductService _productService { get; set; } = null!;

	protected override async Task OnInitializedAsync()
	{
		if (_productService == null)
		{
			throw new InvalidOperationException("ProductService is not available");
		}

		_product = await _productService.GetProduct(Id);
	}

}
