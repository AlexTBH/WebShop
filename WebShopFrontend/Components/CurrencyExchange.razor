@rendermode InteractiveServer
@using WebShopShared.Interfaces
@using WebShopShared.Models

<select @bind="CurrentCurrency">
    <option value="SEK">SEK</option>
    <option value="USD">USD</option>
    <option value="EUR">EUR</option>
</select>

<p>@($"{DisplayAmount:N2} {CurrentCurrency}")</p>

@code {
    [Inject]
    private ICurrencyExchange? _currencyService { get; set; }

    [Parameter]
    public double Amount { get; set; }

    private string _currentCurrency = "SEK";
    private double _displayAmount;

    public string CurrentCurrency
    {
        get => _currentCurrency;
        set
        {
            if (_currentCurrency != value)
            {
                _currentCurrency = value;
                _ = UpdateDisplayAmountAsync();
            }
        }
    }

    public double DisplayAmount => _displayAmount;

    protected override void OnInitialized()
    {
        _displayAmount = Amount; 
    }

    private async Task UpdateDisplayAmountAsync()
    {
        if (CurrentCurrency == "SEK")
        {
            _displayAmount = Amount;
        }
        else if (_currencyService != null)
        {
            var result = await _currencyService.ConvertCurrency(new CurrencyDto
                {
                    ConversionResult = Amount,
                    TargetCurrency = CurrentCurrency
                });
            _displayAmount = result?.ConversionResult ?? Amount;
        }
        StateHasChanged();
    }
}